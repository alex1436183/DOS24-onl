stages:
  - stage_build_push
  - stage_deploy_dev  
  - stage_deploy_prd
  - stage_test  
  - stage_finish 
  
 
workflow:  
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: '$CI_COMMIT_BRANCH == "dev"'

job_build:
  stage: stage_build_push
  image: docker:latest
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
  script:
    - echo "Building Docker image..."
    - docker build -t $DOCKERHUB_USERNAME/$DOCKERHUB_REPO .
    - echo "Tagging image..."
    - docker tag $DOCKERHUB_USERNAME/$DOCKERHUB_REPO:latest $DOCKERHUB_USERNAME/$DOCKERHUB_REPO:$CI_COMMIT_BRANCH-latest
    - docker tag $DOCKERHUB_USERNAME/$DOCKERHUB_REPO:latest $DOCKERHUB_USERNAME/$DOCKERHUB_REPO:$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA
    - echo "Pushing image to Docker Hub..."
    - docker push $DOCKERHUB_USERNAME/$DOCKERHUB_REPO:$CI_COMMIT_BRANCH-latest
    - docker push $DOCKERHUB_USERNAME/$DOCKERHUB_REPO:$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA

job_deploy_dev:
  stage: stage_deploy_dev
  image: docker:latest
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev"'
  before_script:
    - apk add --no-cache openssh
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H "$SWARM_IP" >> ~/.ssh/known_hosts
  script:
    - echo "Deploying via SSH to Docker Swarm..."
    - |
      ssh -i ~/.ssh/id_rsa $SWARM_USER@$SWARM_IP << 'EOF'
        docker compose -p my_app_dev -f /home/alex1743tms/docker/app-my/docker-compose.yml  up -d
      EOF 

job_deploy_prd:
  stage: stage_deploy_prd
  image: docker:latest
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  before_script:
    - apk add --no-cache openssh
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H "$SWARM_IP" >> ~/.ssh/known_hosts
  script:
    - echo "Deploying via SSH to Docker Swarm..."
    - |
      ssh -i ~/.ssh/id_rsa $SWARM_USER@$SWARM_IP << 'EOF'
        docker stack deploy -c /home/alex1743tms/docker/app-my-1.1/docker-compose.yml my_stack
      EOF

job_test_dev:
  stage: stage_test
  image: alpine:3.21
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev"'
  script:
    - apk add --no-cache curl
    - sleep 10  
    - curl http://35.228.39.55:8989
 


job_check_prod:
  stage: stage_test
  image: alpine:3.21
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  script:
  - apk add --no-cache curl
  - sleep 10
  - curl https://stepnote.duckdns.org/


notify_success:
  stage: stage_finish
  image: alpine:3.21
  when: on_success
  script: |
    apk add --no-cache curl
    curl -s -X POST https://api.telegram.org/bot$TOKEN/sendMessage \
      -d chat_id=$CHAT_ID \
      -d text="✅ CI/CD Pipeline Finished Successfully"

notify_failure:
  stage: stage_finish
  image: alpine:3.21
  when: on_failure
  script: |
    apk add --no-cache curl
    curl -s -X POST https://api.telegram.org/bot$TOKEN/sendMessage \
      -d chat_id=$CHAT_ID \
      -d text="❌ CI/CD Pipeline FAILED"
